div(ng-controller="shopping_cart" ng-init="init()")
  .modal.text-center#no-money-modal
    h3 Registra una tarjeta de crédito
    p Ve a 'Editar cuenta' en la barra superior en el ícono de usuario y llena los datos de tu tarjeta de crédito para poder pagar, sino, ¿a quién le cobramos? :(
    br/
    p = link_to 'Registrar tarjeta', edit_user_registration_path, class: 'button round'
  .modal.text-center#checkout-modal
    h3 Pagar
    table.nice-table
      thead
        tr
          th Sabor
          th Precio
      tbody
        tr(ng-repeat="ic in shopping_cart")
          td
            | {{ ic.flavor }} ({{ ic.quantity }})
          td
            | $ {{ ic.subtotal }}
      tfoot
        tr
          th
          th
            | Total
            span.external.helvetica
              |  ${{ total }}
    p
      a.button.little.round(ng-click="pay()")
        | Pagar 
        i.fa.fa-arrow-right
  #dropzone.drop-area(droppable="" drop="handleDrop(data)")
    span.leyend Suelta el helado en las manos de la vaca blanca (precaución, puede comérselo)
    = image_tag 'cow.png' , alt: 'Aquí debería haber una vaca, ¡imagina!'
  - if current_user.id != 1
    #chat-btn.chat-btn.button.round Envíanos un mensaje
  - else
    = link_to 'Ver mensajes', messages_path, class: 'chat-btn button round'
  #chats.chat
    - if current_user.id != 1
      .chatbody
        #chatbody1
        .bottom
          input.chat-input.input(id="message_text1" placeholder="Envíanos un mensaje" type="text")
          input.fa.chat-send-btn.button(onclick="send(1)" value="" type="button")
  section.slider-icecreams
    ul#slider.slider
      li.cherry-garcia-slide
        .slide-wrapper
          h1.slide-title Cherry García
          hr.small
          .slide-content
            p Prueba el Cherry García, helado de cereza con cerezas y Fudge Flakes 
      li.clasics-slide
        .slide-wrapper
          h1.slide-title ¿Prefieres los clásicos?
          hr.small
          .slide-content
            p En ese caso prueba nuestro helado de vainilla, sólo tiene vainilla
      li.rejected-slide
        .slide-wrapper
          h1.slide-title ¿Te batearon?
          hr.small
          .slide-content
            p ¿Qué te parece un patético día comiendo helado y viendo una serie completa en netflix?
      .slider-controls#slider-controls
  - if current_user.admin?
    .text-center.padded
      = link_to 'New Icecream', new_icecream_path, class: 'button round inline-block'
  ul.products-container.js-packery data-packery-options='{ "itemSelector": ".product-card-container" }'
    - @icecreams.each do |ic|
      li.product-card-container
        article.product-card.radius
          .image = image_tag ic.photo.url(:full), class: 'draggable-icecream', data: { id: "#{ic.id}" }
          .caption
            strong.title = ic.flavor
            .description = ic.description
          .footer
            span.price.helvetica = "$#{ic.price}"
            a.button.round.little.right(ng-click="add_to_cart(#{ic.id})")
              i.fa.fa-cart-plus
              |  Al carrito
  - if true
    .corner-order-container.closed
      a.corner-order-checkout-btn.button.fa.multiple-icons#js-corner-checkout
        span.fa-shopping-cart.alfa
        span.fa-times.beta
      .checkout-order-display
        .checkout-order-display-inner
          .text-center(ng-show="total == 0")
            h3 No hay nada aquí
            p Dale un helado a la vaca o clickea el botón de 'al carrito' para agregar un helado a tu carrito
          table.checkout-summary.nice-table(ng-hide="total == 0")
            thead
              tr
                th Sabor
                th Precio
            tbody
              tr(ng-repeat="ic in shopping_cart")
                td
                  a.fa.fa-times.button.round.tiny-padded.separate-next(ng-click="remove(ic.id)")
                  | {{ ic.flavor }} ({{ ic.quantity }})
                td
                  | $ {{ ic.subtotal }}
            tfoot
              tr
                th
                th
                  | Total
                  span.external.helvetica
                    |  ${{ total }}
      .total-bar
        .total-amount.strong-transparent
          | Total
          span.external.helvetica
            |  ${{ total }}
        a.checkout-btn.button.little.round(ng-click="checkout()" ng-hide="total == 0")
          | Checkout 
          i.fa.fa-arrow-right

javascript:
    var aplicacion = angular.module('jerrynbens', []);

    aplicacion.directive('droppable', function() {
    return {
        scope: { drop: '&drop' },
        link: function(scope, element) {
          // again we need the native object
          var el = element[0];
          var drop_handler = scope.drop();
          el.addEventListener(
            'dragover',
            function(e) {
              e.dataTransfer.dropEffect = 'move';
              // allows us to drop
              e.preventDefault();
              this.classList.add('over');
              return false;
            },
            false
          );
          el.addEventListener(
            'drop',
            function(e) {
              // Stops some browsers from redirecting.
              e.preventDefault();

              this.classList.remove('over');

              var item = e.dataTransfer.getData('Text');
              
              scope.drop({data: item});

              return false;
            },
            false
          );
        }
      }
    });
    
    aplicacion.controller('shopping_cart', function($scope, $http ) {
        $scope.shopping_cart = [];
        $scope.total = 0;
        $scope.has_credit_card = "#{current_user.has_credit_card?}";
        $scope.init = function(){
          $scope.get_cart();
        }
        
        $scope.get_cart = function(){
          $http({
            method: 'GET', url: '/current_cart'
          }).success(function(data) {
            console.log(data);
            $scope.shopping_cart = data;
            $scope.calc_total();
          }).error(function(d) {
            alert('Error al intentar recuperar los datos, por favor verifica tu conexión a internet');
          });
        };
        
        $scope.calc_total = function(){
          $scope.total = 0;
          for(var i = 0; i < $scope.shopping_cart.length; i++){
            $scope.total += $scope.shopping_cart[i].subtotal;
          }
        }
        $scope.add_to_cart = function (ic_id){
          $.post("/add", {id: ic_id}, function () {
            $scope.get_cart();
            $('.corner-order-container').addClass('show-total');
            setTimeout(function () { $('.corner-order-container').removeClass('show-total'); }, 1100);
          });
          //setTimeout(function(){ $scope.get_cart(); }, 500);
        }
        $scope.pay = function (){
          $.get("/finish_sale", function () {
            $('html').removeClass('super-overlayed');
            $("#checkout-modal").removeClass('in');
            $scope.get_cart();
          });
          //setTimeout(function(){ $scope.get_cart(); }, 500);
        }
        $scope.show_modal = function (which) {
          $('html').addClass('super-overlayed');
          $(which).addClass("in");
          $('.super-overlay').one('click', function () {
            $(which).removeClass('in');
          });
        }
        $scope.checkout = function (){
          if ($scope.has_credit_card == "true") { $scope.show_modal("#checkout-modal"); }
          else { $scope.show_modal("#no-money-modal"); }
        }
        $scope.remove = function (id){
          $.post("/remove", {id: id}, function () {
            $scope.get_cart();
          });
          //setTimeout(function(){ $scope.get_cart(); }, 500);
        }
        $scope.handleDrop = function (id) {
          $scope.add_to_cart(id);
        }
    });
    var server = "http://jnbschat-199929.use1-2.nitrousbox.com/"
    var listening = [];
    $(document).ready(function(){
        var source = new EventSource(server + 'listen/#{current_user.id}');
        
        listening.push("1");
        source.onmessage = function(event) {
          a =  JSON.parse(event.data);
          console.log(JSON.parse(event.data)); //Incoming message, should raise a notification
          
          if(listening.indexOf(a.sent_by) == -1){
              listening.push(a.sent_by);
              $("#chats").append('<div class="chatbody"><div  id="chatbody' + a.sent_by + '"></div><div class="bottom"><input class="chat-input input" id="message_text' + a.sent_by + '" placeholder="Mensaje a ' + a.sent_by_username + '" type="text"><input onclick="send(' + a.sent_by + ')" value="Enviar" class="fa chat-send-btn button" type="button"></div></div>');
          }
        $("#chatbody"+a.sent_by).append("<b>" + a.role + " " + a.sent_by_username + ":</b> " + a.message + "<br>");
        };
    });
    function send(id){
        var val = $("#message_text" + id).val();
        $("#message_text" + id).val("");
        $.post( server + "api/message/send", {sent_to: id, sent_by: #{current_user.id}, message: val}).always(function(data){console.log(data)});
        $("#chatbody" + id).append("<b>You: </b> " + val + "<br>");
    }
	//$.post("http://localhost:2100/api/message/send", {sent_by: 2, sent_to: 1, message: "jalapeñote"}); <= Send messages